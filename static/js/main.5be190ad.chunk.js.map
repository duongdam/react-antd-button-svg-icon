{"version":3,"sources":["../../lib/key-combo.js","../../lib/locale.js","../../lib/keyboard.js","../../locales/us.js","../../index.js","test.svg","App.js","index.js"],"names":["i","subCombo","otherSubCombo","pressedKeyNames","keyName","escapedKeyName","KeyCombo","comboDeliminator","handler","keyNames","keyCombo","memo","e","startingKeyNameIndex","otherKeyCombo","subCombos","length","index","combo","subComboStrs","_splitStr","keyDeliminator","d","s","ca","c","ci","activeTargetKeys","keyCodes","pressKey","getKeyCodes","killKeyCodeIndex","_clearMacros","macros","macro","this","_appliedMacros","targetElement","_currentContext","_locales","_targetElement","_targetWindow","_targetKeyDownBinding","listeners","_targetKeyUpBinding","_listeners","targetWindow","targetUserAgent","locale","localeBuilder","localeName","localName","keyComboStr","preventRepeatByDefault","releaseHandler","executingHandler","pressHandler","bind","pressHandlerMatches","releaseHandlerMatches","releaseAllKeys","globalContext","callback","previousContextName","targetPlatform","win","globalThis","addEventListener","platform","_handleCommandBug","keyCode","_targetResetBinding","_bindEvent","currentContext","_targetPlatform","_paused","_locale","listenerGroupMap","mapIndex","listenerGroups","preventRepeat","event","pressedKeys","listener","j","_appliedListeners","bindKeyCode","bindMacro","equalKeyCode","leftCommandKeyCode","rightCommandKeyCode","keyboard","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","cx","cy","r","fill","_ref3","clipPath","_ref4","id","width","height","transform","SvgTest","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","App","style","display","justifyContent","alignItems","marginTop","name","size","iconComponent","onClick","message","success","onKeyClick","disable","iconRevert","background","borderColor","block","margin","enableTooltip","tooltipPlacement","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5be190ad.chunk.js","sourcesContent":["\nexport class KeyCombo {\n  constructor(keyComboStr) {\n    this.sourceStr = keyComboStr;\n    this.subCombos = KeyCombo.parseComboStr(keyComboStr);\n    this.keyNames  = this.subCombos.reduce((memo, nextSubCombo) =>\n      memo.concat(nextSubCombo), []);\n  }\n\n  check(pressedKeyNames) {\n    let startingKeyNameIndex = 0;\n    for (let i = 0; i < this.subCombos.length; i += 1) {\n      startingKeyNameIndex = this._checkSubCombo(\n        this.subCombos[i],\n        startingKeyNameIndex,\n        pressedKeyNames\n      );\n      if (startingKeyNameIndex === -1) { return false; }\n    }\n    return true;\n  };\n\n  isEqual(otherKeyCombo) {\n    if (\n      !otherKeyCombo ||\n      typeof otherKeyCombo !== 'string' &&\n      typeof otherKeyCombo !== 'object'\n    ) { return false; }\n\n    if (typeof otherKeyCombo === 'string') {\n      otherKeyCombo = new KeyCombo(otherKeyCombo);\n    }\n\n    if (this.subCombos.length !== otherKeyCombo.subCombos.length) {\n      return false;\n    }\n    for (let i = 0; i < this.subCombos.length; i += 1) {\n      if (this.subCombos[i].length !== otherKeyCombo.subCombos[i].length) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < this.subCombos.length; i += 1) {\n      const subCombo      = this.subCombos[i];\n      const otherSubCombo = otherKeyCombo.subCombos[i].slice(0);\n\n      for (let j = 0; j < subCombo.length; j += 1) {\n        const keyName = subCombo[j];\n        const index   = otherSubCombo.indexOf(keyName);\n\n        if (index > -1) {\n          otherSubCombo.splice(index, 1);\n        }\n      }\n      if (otherSubCombo.length !== 0) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  _checkSubCombo(subCombo, startingKeyNameIndex, pressedKeyNames) {\n    subCombo = subCombo.slice(0);\n    pressedKeyNames = pressedKeyNames.slice(startingKeyNameIndex);\n\n    let endIndex = startingKeyNameIndex;\n    for (let i = 0; i < subCombo.length; i += 1) {\n\n      let keyName = subCombo[i];\n      if (keyName[0] === '\\\\') {\n        const escapedKeyName = keyName.slice(1);\n        if (\n          escapedKeyName === KeyCombo.comboDeliminator ||\n          escapedKeyName === KeyCombo.keyDeliminator\n        ) {\n          keyName = escapedKeyName;\n        }\n      }\n\n      const index = pressedKeyNames.indexOf(keyName);\n      if (index > -1) {\n        subCombo.splice(i, 1);\n        i -= 1;\n        if (index > endIndex) {\n          endIndex = index;\n        }\n        if (subCombo.length === 0) {\n          return endIndex;\n        }\n      }\n    }\n    return -1;\n  };\n}\n\nKeyCombo.comboDeliminator = '>';\nKeyCombo.keyDeliminator   = '+';\n\nKeyCombo.parseComboStr = function(keyComboStr) {\n  const subComboStrs = KeyCombo._splitStr(keyComboStr, KeyCombo.comboDeliminator);\n  const combo        = [];\n\n  for (let i = 0 ; i < subComboStrs.length; i += 1) {\n    combo.push(KeyCombo._splitStr(subComboStrs[i], KeyCombo.keyDeliminator));\n  }\n  return combo;\n}\n\nKeyCombo._splitStr = function(str, deliminator) {\n  const s  = str;\n  const d  = deliminator;\n  let c  = '';\n  const ca = [];\n\n  for (let ci = 0; ci < s.length; ci += 1) {\n    if (ci > 0 && s[ci] === d && s[ci - 1] !== '\\\\') {\n      ca.push(c.trim());\n      c = '';\n      ci += 1;\n    }\n    c += s[ci];\n  }\n  if (c) { ca.push(c.trim()); }\n\n  return ca;\n};\n","import { KeyCombo } from './key-combo';\n\n\nexport class Locale {\n  constructor(name) {\n    this.localeName          = name;\n    this.activeTargetKeys = [];\n    this.pressedKeys         = [];\n    this._appliedMacros      = [];\n    this._keyMap             = {};\n    this._killKeyCodes       = [];\n    this._macros             = [];\n  }\n\n  bindKeyCode(keyCode, keyNames) {\n    if (typeof keyNames === 'string') {\n      keyNames = [keyNames];\n    }\n\n    this._keyMap[keyCode] = keyNames;\n  };\n\n  bindMacro(keyComboStr, keyNames) {\n    if (typeof keyNames === 'string') {\n      keyNames = [ keyNames ];\n    }\n\n    let handler = null;\n    if (typeof keyNames === 'function') {\n      handler = keyNames;\n      keyNames = null;\n    }\n\n    const macro = {\n      keyCombo : new KeyCombo(keyComboStr),\n      keyNames : keyNames,\n      handler  : handler\n    };\n\n    this._macros.push(macro);\n  };\n\n  getKeyCodes(keyName) {\n    const keyCodes = [];\n    for (const keyCode in this._keyMap) {\n      const index = this._keyMap[keyCode].indexOf(keyName);\n      if (index > -1) { keyCodes.push(keyCode|0); }\n    }\n    return keyCodes;\n  };\n\n  getKeyNames(keyCode) {\n    return this._keyMap[keyCode] || [];\n  };\n\n  setKillKey(keyCode) {\n    if (typeof keyCode === 'string') {\n      const keyCodes = this.getKeyCodes(keyCode);\n      for (let i = 0; i < keyCodes.length; i += 1) {\n        this.setKillKey(keyCodes[i]);\n      }\n      return;\n    }\n\n    this._killKeyCodes.push(keyCode);\n  };\n\n  pressKey(keyCode) {\n    if (typeof keyCode === 'string') {\n      const keyCodes = this.getKeyCodes(keyCode);\n      for (let i = 0; i < keyCodes.length; i += 1) {\n        this.pressKey(keyCodes[i]);\n      }\n      return;\n    }\n\n    this.activeTargetKeys.length = 0;\n    const keyNames = this.getKeyNames(keyCode);\n    for (let i = 0; i < keyNames.length; i += 1) {\n      this.activeTargetKeys.push(keyNames[i]);\n      if (this.pressedKeys.indexOf(keyNames[i]) === -1) {\n        this.pressedKeys.push(keyNames[i]);\n      }\n    }\n\n    this._applyMacros();\n  };\n\n  releaseKey(keyCode) {\n    if (typeof keyCode === 'string') {\n      const keyCodes = this.getKeyCodes(keyCode);\n      for (let i = 0; i < keyCodes.length; i += 1) {\n        this.releaseKey(keyCodes[i]);\n      }\n\n    } else {\n      const keyNames         = this.getKeyNames(keyCode);\n      const killKeyCodeIndex = this._killKeyCodes.indexOf(keyCode);\n\n      if (killKeyCodeIndex !== -1) {\n        this.pressedKeys.length = 0;\n      } else {\n        for (let i = 0; i < keyNames.length; i += 1) {\n          const index = this.pressedKeys.indexOf(keyNames[i]);\n          if (index > -1) {\n            this.pressedKeys.splice(index, 1);\n          }\n        }\n      }\n\n      this.activeTargetKeys.length = 0;\n      this._clearMacros();\n    }\n  };\n\n  _applyMacros() {\n    const macros = this._macros.slice(0);\n    for (let i = 0; i < macros.length; i += 1) {\n      const macro = macros[i];\n      if (macro.keyCombo.check(this.pressedKeys)) {\n        if (macro.handler) {\n          macro.keyNames = macro.handler(this.pressedKeys);\n        }\n        for (let j = 0; j < macro.keyNames.length; j += 1) {\n          if (this.pressedKeys.indexOf(macro.keyNames[j]) === -1) {\n            this.pressedKeys.push(macro.keyNames[j]);\n          }\n        }\n        this._appliedMacros.push(macro);\n      }\n    }\n  };\n\n  _clearMacros() {\n    for (let i = 0; i < this._appliedMacros.length; i += 1) {\n      const macro = this._appliedMacros[i];\n      if (!macro.keyCombo.check(this.pressedKeys)) {\n        for (let j = 0; j < macro.keyNames.length; j += 1) {\n          const index = this.pressedKeys.indexOf(macro.keyNames[j]);\n          if (index > -1) {\n            this.pressedKeys.splice(index, 1);\n          }\n        }\n        if (macro.handler) {\n          macro.keyNames = null;\n        }\n        this._appliedMacros.splice(i, 1);\n        i -= 1;\n      }\n    }\n  }\n}\n","import { Locale } from './locale';\nimport { KeyCombo } from './key-combo';\n\n\nexport class Keyboard {\n  constructor(targetWindow, targetElement, targetPlatform, targetUserAgent) {\n    this._locale               = null;\n    this._currentContext       = '';\n    this._contexts             = {};\n    this._listeners            = [];\n    this._appliedListeners     = [];\n    this._locales              = {};\n    this._targetElement        = null;\n    this._targetWindow         = null;\n    this._targetPlatform       = '';\n    this._targetUserAgent      = '';\n    this._isModernBrowser      = false;\n    this._targetKeyDownBinding = null;\n    this._targetKeyUpBinding   = null;\n    this._targetResetBinding   = null;\n    this._paused               = false;\n\n    this._contexts.global = {\n      listeners: this._listeners,\n      targetWindow,\n      targetElement,\n      targetPlatform,\n      targetUserAgent\n    };\n\n    this.setContext('global');\n  }\n\n  setLocale(localeName, localeBuilder) {\n    let locale = null;\n    if (typeof localeName === 'string') {\n\n      if (localeBuilder) {\n        locale = new Locale(localeName);\n        localeBuilder(locale, this._targetPlatform, this._targetUserAgent);\n      } else {\n        locale = this._locales[localeName] || null;\n      }\n    } else {\n      locale     = localeName;\n      localeName = locale._localeName;\n    }\n\n    this._locale              = locale;\n    this._locales[localeName] = locale;\n    if (locale) {\n      this._locale.pressedKeys = locale.pressedKeys;\n    }\n\n    return this;\n  }\n\n  getLocale(localName) {\n    localName || (localName = this._locale.localeName);\n    return this._locales[localName] || null;\n  }\n\n  bind(keyComboStr, pressHandler, releaseHandler, preventRepeatByDefault) {\n    if (keyComboStr === null || typeof keyComboStr === 'function') {\n      preventRepeatByDefault = releaseHandler;\n      releaseHandler         = pressHandler;\n      pressHandler           = keyComboStr;\n      keyComboStr            = null;\n    }\n\n    if (\n      keyComboStr &&\n      typeof keyComboStr === 'object' &&\n      typeof keyComboStr.length === 'number'\n    ) {\n      for (let i = 0; i < keyComboStr.length; i += 1) {\n        this.bind(keyComboStr[i], pressHandler, releaseHandler);\n      }\n      return this;\n    }\n\n    this._listeners.push({\n      keyCombo              : keyComboStr ? new KeyCombo(keyComboStr) : null,\n      pressHandler          : pressHandler           || null,\n      releaseHandler        : releaseHandler         || null,\n      preventRepeat         : preventRepeatByDefault || false,\n      preventRepeatByDefault: preventRepeatByDefault || false,\n      executingHandler      : false\n    });\n\n    return this;\n  }\n\n  addListener(keyComboStr, pressHandler, releaseHandler, preventRepeatByDefault) {\n    return this.bind(keyComboStr, pressHandler, releaseHandler, preventRepeatByDefault);\n  }\n\n  on(keyComboStr, pressHandler, releaseHandler, preventRepeatByDefault) {\n    return this.bind(keyComboStr, pressHandler, releaseHandler, preventRepeatByDefault);\n  }\n\n  bindPress(keyComboStr, pressHandler, preventRepeatByDefault) {\n    return this.bind(keyComboStr, pressHandler, null, preventRepeatByDefault);\n  }\n\n  bindRelease(keyComboStr, releaseHandler) {\n    return this.bind(keyComboStr, null, releaseHandler, preventRepeatByDefault);\n  }\n\n  unbind(keyComboStr, pressHandler, releaseHandler) {\n    if (keyComboStr === null || typeof keyComboStr === 'function') {\n      releaseHandler = pressHandler;\n      pressHandler   = keyComboStr;\n      keyComboStr = null;\n    }\n\n    if (\n      keyComboStr &&\n      typeof keyComboStr === 'object' &&\n      typeof keyComboStr.length === 'number'\n    ) {\n      for (let i = 0; i < keyComboStr.length; i += 1) {\n        this.unbind(keyComboStr[i], pressHandler, releaseHandler);\n      }\n      return this;\n    }\n\n    for (let i = 0; i < this._listeners.length; i += 1) {\n      const listener = this._listeners[i];\n\n      const comboMatches          = !keyComboStr && !listener.keyCombo ||\n                                  listener.keyCombo && listener.keyCombo.isEqual(keyComboStr);\n      const pressHandlerMatches   = !pressHandler && !releaseHandler ||\n                                  !pressHandler && !listener.pressHandler ||\n                                  pressHandler === listener.pressHandler;\n      const releaseHandlerMatches = !pressHandler && !releaseHandler ||\n                                  !releaseHandler && !listener.releaseHandler ||\n                                  releaseHandler === listener.releaseHandler;\n\n      if (comboMatches && pressHandlerMatches && releaseHandlerMatches) {\n        this._listeners.splice(i, 1);\n        i -= 1;\n      }\n    }\n\n    return this;\n  }\n\n  removeListener(keyComboStr, pressHandler, releaseHandler) {\n    return this.unbind(keyComboStr, pressHandler, releaseHandler);\n  }\n\n  off(keyComboStr, pressHandler, releaseHandler) {\n    return this.unbind(keyComboStr, pressHandler, releaseHandler);\n  }\n\n  setContext(contextName) {\n    if(this._locale) { this.releaseAllKeys(); }\n\n    if (!this._contexts[contextName]) {\n      const globalContext = this._contexts.global;\n      this._contexts[contextName] = {\n        listeners      : [],\n        targetWindow   : globalContext.targetWindow,\n        targetElement  : globalContext.targetElement,\n        targetPlatform : globalContext.targetPlatform,\n        targetUserAgent: globalContext.targetUserAgent\n      };\n    }\n\n    const context        = this._contexts[contextName];\n    this._currentContext = contextName;\n    this._listeners      = context.listeners;\n\n    this.stop();\n    this.watch(\n      context.targetWindow,\n      context.targetElement,\n      context.targetPlatform,\n      context.targetUserAgent\n    );\n\n    return this;\n  }\n\n  getContext() {\n    return this._currentContext;\n  }\n\n  withContext(contextName, callback) {\n    const previousContextName = this.getContext();\n    this.setContext(contextName);\n\n    callback();\n\n    this.setContext(previousContextName);\n\n    return this;\n  }\n\n  watch(targetWindow, targetElement, targetPlatform, targetUserAgent) {\n    this.stop();\n\n    const win = typeof globalThis !== 'undefined' ? globalThis :\n                typeof global !== 'undefined' ? global :\n                typeof window !== 'undefined' ? window :\n                {};\n\n    if (!targetWindow) {\n      if (!win.addEventListener && !win.attachEvent) {\n        throw new Error('Cannot find window functions addEventListener or attachEvent.');\n      }\n      targetWindow = win;\n    }\n\n    // Handle element bindings where a target window is not passed\n    if (typeof targetWindow.nodeType === 'number') {\n      targetUserAgent = targetPlatform;\n      targetPlatform  = targetElement;\n      targetElement   = targetWindow;\n      targetWindow    = win;\n    }\n\n    if (!targetWindow.addEventListener && !targetWindow.attachEvent) {\n      throw new Error('Cannot find addEventListener or attachEvent methods on targetWindow.');\n    }\n\n    this._isModernBrowser = !!targetWindow.addEventListener;\n\n    const userAgent = targetWindow.navigator && targetWindow.navigator.userAgent || '';\n    const platform  = targetWindow.navigator && targetWindow.navigator.platform  || '';\n\n    targetElement   && targetElement   !== null || (targetElement   = targetWindow.document);\n    targetPlatform  && targetPlatform  !== null || (targetPlatform  = platform);\n    targetUserAgent && targetUserAgent !== null || (targetUserAgent = userAgent);\n\n    this._targetKeyDownBinding = (event) => {\n      this.pressKey(event.keyCode, event);\n      this._handleCommandBug(event, platform);\n    };\n    this._targetKeyUpBinding = (event) => {\n      this.releaseKey(event.keyCode, event);\n    };\n    this._targetResetBinding = (event) => {\n      this.releaseAllKeys(event);\n    };\n\n    this._bindEvent(targetElement, 'keydown', this._targetKeyDownBinding);\n    this._bindEvent(targetElement, 'keyup',   this._targetKeyUpBinding);\n    this._bindEvent(targetWindow,  'focus',   this._targetResetBinding);\n    this._bindEvent(targetWindow,  'blur',    this._targetResetBinding);\n\n    this._targetElement   = targetElement;\n    this._targetWindow    = targetWindow;\n    this._targetPlatform  = targetPlatform;\n    this._targetUserAgent = targetUserAgent;\n\n    const currentContext           = this._contexts[this._currentContext];\n    currentContext.targetWindow    = this._targetWindow;\n    currentContext.targetElement   = this._targetElement;\n    currentContext.targetPlatform  = this._targetPlatform;\n    currentContext.targetUserAgent = this._targetUserAgent;\n\n    return this;\n  }\n\n  stop() {\n    if (!this._targetElement || !this._targetWindow) { return; }\n\n    this._unbindEvent(this._targetElement, 'keydown', this._targetKeyDownBinding);\n    this._unbindEvent(this._targetElement, 'keyup',   this._targetKeyUpBinding);\n    this._unbindEvent(this._targetWindow,  'focus',   this._targetResetBinding);\n    this._unbindEvent(this._targetWindow,  'blur',    this._targetResetBinding);\n\n    this._targetWindow  = null;\n    this._targetElement = null;\n\n    return this;\n  }\n\n  pressKey(keyCode, event) {\n    if (this._paused) { return this; }\n    if (!this._locale) { throw new Error('Locale not set'); }\n\n    this._locale.pressKey(keyCode);\n    this._applyBindings(event);\n\n    return this;\n  }\n\n  releaseKey(keyCode, event) {\n    if (this._paused) { return this; }\n    if (!this._locale) { throw new Error('Locale not set'); }\n\n    this._locale.releaseKey(keyCode);\n    this._clearBindings(event);\n\n    return this;\n  }\n\n  releaseAllKeys(event) {\n    if (this._paused) { return this; }\n    if (!this._locale) { throw new Error('Locale not set'); }\n\n    this._locale.pressedKeys.length = 0;\n    this._clearBindings(event);\n\n    return this;\n  }\n\n  pause() {\n    if (this._paused) { return this; }\n    if (this._locale) { this.releaseAllKeys(); }\n    this._paused = true;\n\n    return this;\n  }\n\n  resume() {\n    this._paused = false;\n\n    return this;\n  }\n\n  reset() {\n    this.releaseAllKeys();\n    this._listeners.length = 0;\n\n    return this;\n  }\n\n  _bindEvent(targetElement, eventName, handler) {\n    return this._isModernBrowser ?\n      targetElement.addEventListener(eventName, handler, false) :\n      targetElement.attachEvent('on' + eventName, handler);\n  }\n\n  _unbindEvent(targetElement, eventName, handler) {\n    return this._isModernBrowser ?\n      targetElement.removeEventListener(eventName, handler, false) :\n      targetElement.detachEvent('on' + eventName, handler);\n  }\n\n  _getGroupedListeners() {\n    const listenerGroups   = [];\n    const listenerGroupMap = [];\n\n    let listeners = this._listeners;\n    if (this._currentContext !== 'global') {\n      listeners = [...listeners, ...this._contexts.global.listeners];\n    }\n\n    listeners.sort(\n      (a, b) =>\n        (b.keyCombo ? b.keyCombo.keyNames.length : 0) -\n        (a.keyCombo ? a.keyCombo.keyNames.length : 0)\n    ).forEach((l) => {\n      let mapIndex = -1;\n      for (let i = 0; i < listenerGroupMap.length; i += 1) {\n        if (listenerGroupMap[i] === null && l.keyCombo === null ||\n            listenerGroupMap[i] !== null && listenerGroupMap[i].isEqual(l.keyCombo)) {\n          mapIndex = i;\n        }\n      }\n      if (mapIndex === -1) {\n        mapIndex = listenerGroupMap.length;\n        listenerGroupMap.push(l.keyCombo);\n      }\n      if (!listenerGroups[mapIndex]) {\n        listenerGroups[mapIndex] = [];\n      }\n      listenerGroups[mapIndex].push(l);\n    });\n\n    return listenerGroups;\n  }\n\n  _applyBindings(event) {\n    let preventRepeat = false;\n\n    event || (event = {});\n    event.preventRepeat = () => { preventRepeat = true; };\n    event.pressedKeys   = this._locale.pressedKeys.slice(0);\n\n    const activeTargetKeys = this._locale.activeTargetKeys;\n    const pressedKeys      = this._locale.pressedKeys.slice(0);\n    const listenerGroups   = this._getGroupedListeners();\n\n    for (let i = 0; i < listenerGroups.length; i += 1) {\n      const listeners = listenerGroups[i];\n      const keyCombo  = listeners[0].keyCombo;\n\n      if (\n        keyCombo === null ||\n        keyCombo.check(pressedKeys) &&\n        activeTargetKeys.some(k => keyCombo.keyNames.includes(k))\n      ) {\n        for (let j = 0; j < listeners.length; j += 1) {\n          let listener = listeners[j];\n\n          if (!listener.executingHandler && listener.pressHandler && !listener.preventRepeat) {\n            listener.executingHandler = true;\n            listener.pressHandler.call(this, event);\n            listener.executingHandler = false;\n\n            if (preventRepeat || listener.preventRepeatByDefault) {\n              listener.preventRepeat = true;\n              preventRepeat          = false;\n            }\n          }\n\n          if (this._appliedListeners.indexOf(listener) === -1) {\n            this._appliedListeners.push(listener);\n          }\n        }\n\n        if (keyCombo) {\n          for (let j = 0; j < keyCombo.keyNames.length; j += 1) {\n            const index = pressedKeys.indexOf(keyCombo.keyNames[j]);\n            if (index !== -1) {\n              pressedKeys.splice(index, 1);\n              j -= 1;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  _clearBindings(event) {\n    event || (event = {});\n    event.pressedKeys = this._locale.pressedKeys.slice(0);\n\n    for (let i = 0; i < this._appliedListeners.length; i += 1) {\n      const listener = this._appliedListeners[i];\n      const keyCombo = listener.keyCombo;\n      if (keyCombo === null || !keyCombo.check(this._locale.pressedKeys)) {\n        listener.preventRepeat = false;\n        if (keyCombo !== null || event.pressedKeys.length === 0) {\n          this._appliedListeners.splice(i, 1);\n          i -= 1;\n        }\n        if (!listener.executingHandler && listener.releaseHandler) {\n          listener.executingHandler = true;\n          listener.releaseHandler.call(this, event);\n          listener.executingHandler = false;\n        }\n      }\n    }\n  }\n\n  _handleCommandBug(event, platform) {\n    // On Mac when the command key is kept pressed, keyup is not triggered for any other key.\n    // In this case force a keyup for non-modifier keys directly after the keypress.\n    const modifierKeys = [\"shift\", \"ctrl\", \"alt\", \"capslock\", \"tab\", \"command\"];\n    if (platform.match(\"Mac\") && this._locale.pressedKeys.includes(\"command\") &&\n        !modifierKeys.includes(this._locale.getKeyNames(event.keyCode)[0])) {\n      this._targetKeyUpBinding(event);\n    }\n  }\n}\n","\nexport function us(locale, platform, userAgent) {\n\n  // general\n  locale.bindKeyCode(3,   ['cancel']);\n  locale.bindKeyCode(8,   ['backspace']);\n  locale.bindKeyCode(9,   ['tab']);\n  locale.bindKeyCode(12,  ['clear']);\n  locale.bindKeyCode(13,  ['enter']);\n  locale.bindKeyCode(16,  ['shift']);\n  locale.bindKeyCode(17,  ['ctrl']);\n  locale.bindKeyCode(18,  ['alt', 'menu']);\n  locale.bindKeyCode(19,  ['pause', 'break']);\n  locale.bindKeyCode(20,  ['capslock']);\n  locale.bindKeyCode(27,  ['escape', 'esc']);\n  locale.bindKeyCode(32,  ['space', 'spacebar']);\n  locale.bindKeyCode(33,  ['pageup']);\n  locale.bindKeyCode(34,  ['pagedown']);\n  locale.bindKeyCode(35,  ['end']);\n  locale.bindKeyCode(36,  ['home']);\n  locale.bindKeyCode(37,  ['left']);\n  locale.bindKeyCode(38,  ['up']);\n  locale.bindKeyCode(39,  ['right']);\n  locale.bindKeyCode(40,  ['down']);\n  locale.bindKeyCode(41,  ['select']);\n  locale.bindKeyCode(42,  ['printscreen']);\n  locale.bindKeyCode(43,  ['execute']);\n  locale.bindKeyCode(44,  ['snapshot']);\n  locale.bindKeyCode(45,  ['insert', 'ins']);\n  locale.bindKeyCode(46,  ['delete', 'del']);\n  locale.bindKeyCode(47,  ['help']);\n  locale.bindKeyCode(145, ['scrolllock', 'scroll']);\n  locale.bindKeyCode(188, ['comma', ',']);\n  locale.bindKeyCode(190, ['period', '.']);\n  locale.bindKeyCode(191, ['slash', 'forwardslash', '/']);\n  locale.bindKeyCode(192, ['graveaccent', '`']);\n  locale.bindKeyCode(219, ['openbracket', '[']);\n  locale.bindKeyCode(220, ['backslash', '\\\\']);\n  locale.bindKeyCode(221, ['closebracket', ']']);\n  locale.bindKeyCode(222, ['apostrophe', '\\'']);\n\n  // 0-9\n  locale.bindKeyCode(48, ['zero', '0']);\n  locale.bindKeyCode(49, ['one', '1']);\n  locale.bindKeyCode(50, ['two', '2']);\n  locale.bindKeyCode(51, ['three', '3']);\n  locale.bindKeyCode(52, ['four', '4']);\n  locale.bindKeyCode(53, ['five', '5']);\n  locale.bindKeyCode(54, ['six', '6']);\n  locale.bindKeyCode(55, ['seven', '7']);\n  locale.bindKeyCode(56, ['eight', '8']);\n  locale.bindKeyCode(57, ['nine', '9']);\n\n  // numpad\n  locale.bindKeyCode(96, ['numzero', 'num0']);\n  locale.bindKeyCode(97, ['numone', 'num1']);\n  locale.bindKeyCode(98, ['numtwo', 'num2']);\n  locale.bindKeyCode(99, ['numthree', 'num3']);\n  locale.bindKeyCode(100, ['numfour', 'num4']);\n  locale.bindKeyCode(101, ['numfive', 'num5']);\n  locale.bindKeyCode(102, ['numsix', 'num6']);\n  locale.bindKeyCode(103, ['numseven', 'num7']);\n  locale.bindKeyCode(104, ['numeight', 'num8']);\n  locale.bindKeyCode(105, ['numnine', 'num9']);\n  locale.bindKeyCode(106, ['nummultiply', 'num*']);\n  locale.bindKeyCode(107, ['numadd', 'num+']);\n  locale.bindKeyCode(108, ['numenter']);\n  locale.bindKeyCode(109, ['numsubtract', 'num-']);\n  locale.bindKeyCode(110, ['numdecimal', 'num.']);\n  locale.bindKeyCode(111, ['numdivide', 'num/']);\n  locale.bindKeyCode(144, ['numlock', 'num']);\n\n  // function keys\n  locale.bindKeyCode(112, ['f1']);\n  locale.bindKeyCode(113, ['f2']);\n  locale.bindKeyCode(114, ['f3']);\n  locale.bindKeyCode(115, ['f4']);\n  locale.bindKeyCode(116, ['f5']);\n  locale.bindKeyCode(117, ['f6']);\n  locale.bindKeyCode(118, ['f7']);\n  locale.bindKeyCode(119, ['f8']);\n  locale.bindKeyCode(120, ['f9']);\n  locale.bindKeyCode(121, ['f10']);\n  locale.bindKeyCode(122, ['f11']);\n  locale.bindKeyCode(123, ['f12']);\n  locale.bindKeyCode(124, ['f13']);\n  locale.bindKeyCode(125, ['f14']);\n  locale.bindKeyCode(126, ['f15']);\n  locale.bindKeyCode(127, ['f16']);\n  locale.bindKeyCode(128, ['f17']);\n  locale.bindKeyCode(129, ['f18']);\n  locale.bindKeyCode(130, ['f19']);\n  locale.bindKeyCode(131, ['f20']);\n  locale.bindKeyCode(132, ['f21']);\n  locale.bindKeyCode(133, ['f22']);\n  locale.bindKeyCode(134, ['f23']);\n  locale.bindKeyCode(135, ['f24']);\n\n  // secondary key symbols\n  locale.bindMacro('shift + `', ['tilde', '~']);\n  locale.bindMacro('shift + 1', ['exclamation', 'exclamationpoint', '!']);\n  locale.bindMacro('shift + 2', ['at', '@']);\n  locale.bindMacro('shift + 3', ['number', '#']);\n  locale.bindMacro('shift + 4', ['dollar', 'dollars', 'dollarsign', '$']);\n  locale.bindMacro('shift + 5', ['percent', '%']);\n  locale.bindMacro('shift + 6', ['caret', '^']);\n  locale.bindMacro('shift + 7', ['ampersand', 'and', '&']);\n  locale.bindMacro('shift + 8', ['asterisk', '*']);\n  locale.bindMacro('shift + 9', ['openparen', '(']);\n  locale.bindMacro('shift + 0', ['closeparen', ')']);\n  locale.bindMacro('shift + -', ['underscore', '_']);\n  locale.bindMacro('shift + =', ['plus', '+']);\n  locale.bindMacro('shift + [', ['opencurlybrace', 'opencurlybracket', '{']);\n  locale.bindMacro('shift + ]', ['closecurlybrace', 'closecurlybracket', '}']);\n  locale.bindMacro('shift + \\\\', ['verticalbar', '|']);\n  locale.bindMacro('shift + ;', ['colon', ':']);\n  locale.bindMacro('shift + \\'', ['quotationmark', '\\'']);\n  locale.bindMacro('shift + !,', ['openanglebracket', '<']);\n  locale.bindMacro('shift + .', ['closeanglebracket', '>']);\n  locale.bindMacro('shift + /', ['questionmark', '?']);\n\n  if (platform.match('Mac')) {\n    locale.bindMacro('command', ['mod', 'modifier']);\n  } else {\n    locale.bindMacro('ctrl', ['mod', 'modifier']);\n  }\n\n  //a-z and A-Z\n  for (let keyCode = 65; keyCode <= 90; keyCode += 1) {\n    var keyName = String.fromCharCode(keyCode + 32);\n    var capitalKeyName = String.fromCharCode(keyCode);\n  \tlocale.bindKeyCode(keyCode, keyName);\n  \tlocale.bindMacro('shift + ' + keyName, capitalKeyName);\n  \tlocale.bindMacro('capslock + ' + keyName, capitalKeyName);\n  }\n\n  // browser caveats\n  const semicolonKeyCode = userAgent.match('Firefox') ? 59  : 186;\n  const dashKeyCode      = userAgent.match('Firefox') ? 173 : 189;\n  const equalKeyCode     = userAgent.match('Firefox') ? 61  : 187;\n  let leftCommandKeyCode;\n  let rightCommandKeyCode;\n  if (platform.match('Mac') && (userAgent.match('Safari') || userAgent.match('Chrome'))) {\n    leftCommandKeyCode  = 91;\n    rightCommandKeyCode = 93;\n  } else if(platform.match('Mac') && userAgent.match('Opera')) {\n    leftCommandKeyCode  = 17;\n    rightCommandKeyCode = 17;\n  } else if(platform.match('Mac') && userAgent.match('Firefox')) {\n    leftCommandKeyCode  = 224;\n    rightCommandKeyCode = 224;\n  }\n  locale.bindKeyCode(semicolonKeyCode,    ['semicolon', ';']);\n  locale.bindKeyCode(dashKeyCode,         ['dash', '-']);\n  locale.bindKeyCode(equalKeyCode,        ['equal', 'equalsign', '=']);\n  locale.bindKeyCode(leftCommandKeyCode,  ['command', 'windows', 'win', 'super', 'leftcommand', 'leftwindows', 'leftwin', 'leftsuper']);\n  locale.bindKeyCode(rightCommandKeyCode, ['command', 'windows', 'win', 'super', 'rightcommand', 'rightwindows', 'rightwin', 'rightsuper']);\n\n  // kill keys\n  locale.setKillKey('command');\n};\n","import { Keyboard } from './lib/keyboard';\nimport { Locale } from './lib/locale';\nimport { KeyCombo } from './lib/key-combo';\nimport { us } from './locales/us';\n\nconst keyboard = new Keyboard();\n\nkeyboard.setLocale('us', us);\n\nkeyboard.Keyboard = Keyboard;\nkeyboard.Locale = Locale;\nkeyboard.KeyCombo = KeyCombo;\n\nexport default keyboard;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 15.4023,\n  cy: 14.7453,\n  r: 14.652,\n  fill: \"white\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  clipPath: \"url(#clip2)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21.6737 8.88622L20.52 7.73254C20.0513 7.2631 19.4157 7 18.7525 7H9.12504C8.17564 7 7.40625 7.76939 7.40625 8.71879V20.2812C7.40625 21.2306 8.17564 22 9.12504 22H20.6875C21.6369 22 22.4062 21.2306 22.4062 20.2812V10.6538C22.4062 9.99057 22.1432 9.35497 21.6737 8.88622ZM9.90621 10.9062V9.34375C9.90621 9.085 10.1162 8.875 10.375 8.875H16.9375C17.1962 8.875 17.4062 9.085 17.4062 9.34375V10.9062C17.4062 11.165 17.1962 11.375 16.9375 11.375H10.375C10.1162 11.375 9.90621 11.165 9.90621 10.9062ZM14.9062 19.5C13.3532 19.5 12.0938 18.2406 12.0938 16.6875C12.0938 15.1343 13.3532 13.875 14.9062 13.875C16.4593 13.875 17.7188 15.1343 17.7188 16.6875C17.7188 18.2406 16.4593 19.5 14.9062 19.5Z\",\n  fill: \"\"\n}));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n  id: \"clip2\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 15,\n  height: 15,\n  fill: \"white\",\n  transform: \"translate(7.40625 7)\"\n})));\n\nconst SvgTest = (_ref) => {\n  let svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 31,\n    height: 30,\n    viewBox: \"0 0 31 30\",\n    fill: \"#1790FF\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgTest, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/test.e40dac94.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { ReactComponent as TestSVG } from \"./test.svg\";\nimport { CLFButtonSVG } from \"react-antd-button-svg-icons\";\nimport { message } from \"antd\";\n\nconst App = () => {\n  return (\n    <div style={{\n      width: \"100%\",\n      display: \"grid\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: \"100px\"\n    }}>\n\n      Default\n      <CLFButtonSVG\n        name={\"ClassFunc\"}\n        size={\"default\"}\n        iconComponent={<TestSVG />}\n        onClick={() => {\n          message.success(\"Hello CLFButtonSVG\", 0.2);\n        }}\n        onKeyClick={() => {\n          message.success(\"This is key + click\", 0.2);\n        }}\n        disable={false}\n        width={150}\n      />\n\n      Icon revert right\n      <CLFButtonSVG\n        name={\"ClassFunc\"}\n        size={\"default\"}\n        iconComponent={<TestSVG />}\n        iconRevert={true}\n        onClick={() => {\n          message.success(\"Hello CLFButtonSVG\", 0.2);\n        }}\n        onKeyClick={() => {\n          message.success(\"This is key + click\", 0.2);\n        }}\n        disable={false}\n        width={150}\n        background=\"#1790FF\"\n        borderColor=\"#1790FF\"\n      />\n\n      Full Width\n      <CLFButtonSVG\n        name={\"Full Width\"}\n        size={\"default\"}\n        iconComponent={<TestSVG />}\n        onClick={() => {\n          message.success(\"Hello CLFButtonSVG\", 0.2);\n        }}\n        onKeyClick={() => {\n          message.success(\"This is key + click\", 0.2);\n        }}\n        disable={false}\n        block={true}\n        margin={\"5px\"}\n      />\n\n      With Tooltip\n      <CLFButtonSVG\n        name={\"With tooltip\"}\n        size={\"default\"}\n        iconComponent={<TestSVG />}\n        onClick={() => {\n          message.success(\"Hello CLFButtonSVG\", 0.2);\n        }}\n        onKeyClick={() => {\n          message.success(\"This is key + click\", 0.2);\n        }}\n        disable={false}\n        block={true}\n        margin={\"5px\"}\n        enableTooltip={true}\n        tooltipPlacement={\"right\"}\n      />\n\n      Loading\n      <CLFButtonSVG\n        name={\"Full Width Loading\"}\n        size={\"default\"}\n        iconComponent={<TestSVG />}\n        disable={false}\n        loading={true}\n        block={true}\n      />\n\n      Disabled\n      <CLFButtonSVG\n        name={\"Full Width Disable\"}\n        size={\"default\"}\n        iconComponent={<TestSVG />}\n        disable={true}\n        loading={false}\n        block={true}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}